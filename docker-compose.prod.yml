services:
  authz-worker:
    container_name: france-nuage-authz-worker
    depends_on:
      postgres:
        condition: service_healthy
      spicedb:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://controlplane:${POSTGRES_CONTROLPLANE_PASSWORD}@postgres:5432/controlplane
      SPICEDB_GRPC_PRESHARED_KEY: ${SPICEDB_GRPC_PRESHARED_KEY}
      SPICEDB_URL: ${SPICEDB_URL:-http://spicedb:50051}
    image: registry.gitlab.com/getbunker-france-nuage/france-nuage/plateforme/authz-worker:release
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: always
    pull_policy: always

  controlplane:
    container_name: france-nuage-controlplane
    depends_on:
      postgres:
        condition: service_healthy
      spicedb:
        condition: service_healthy
    environment:
      CONSOLE_URL: https://console.france-nuage.fr
      CONTROLPLANE_ADDR: 0.0.0.0:80
      DATABASE_URL: postgresql://controlplane:${POSTGRES_CONTROLPLANE_PASSWORD}@postgres:5432/controlplane
      OIDC_URL: https://gitlab.com/.well-known/openid-configuration
      ROOT_SERVICE_ACCOUNT_KEY: ${ROOT_SERVICE_ACCOUNT_KEY}
      SPICEDB_GRPC_PRESHARED_KEY: ${SPICEDB_GRPC_PRESHARED_KEY}
      SPICEDB_URL: ${SPICEDB_URL:-http://spicedb:50051}
    healthcheck:
      test: ["CMD", "/bin/grpc_health_probe", "-addr=localhost:80"]
      interval: 5s
      timeout: 5s
      retries: 24
    image: registry.gitlab.com/getbunker-france-nuage/france-nuage/plateforme/controlplane:release
    labels:
      - com.centurylinklabs.watchtower.enable=true
    ports:
      - "80:80"
    restart: always
    pull_policy: always
    volumes:
      - type: volume
        source: nfs-snippets
        target: /mnt/pve/nfs-snippets
        volume:
          nocopy: true

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: controlplane
      POSTGRES_PASSWORD: ${POSTGRES_CONTROLPLANE_PASSWORD}
      POSTGRES_DB: controlplane
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U controlplane -d controlplane"]
      interval: 5s
      timeout: 5s
      retries: 24
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  spicedb:
    image: "authzed/spicedb:latest"
    command: serve
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPICEDB_GRPC_PRESHARED_KEY: ${SPICEDB_GRPC_PRESHARED_KEY}
      SPICEDB_DATASTORE_ENGINE: postgres
      SPICEDB_DATASTORE_CONN_URI: postgres://spicedb:${POSTGRES_SPICEDB_PASSWORD}@postgres:5432/spicedb?sslmode=disable
    expose:
      - 8443
      - 50051
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:50051"]
      interval: 5s
      timeout: 5s
      retries: 24
    ports:
      - "50051:50051"
      - "8443:8443"

  synchronizer:
    container_name: france-nuage-synchronizer
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://controlplane:${POSTGRES_CONTROLPLANE_PASSWORD}@postgres:5432/controlplane
      OIDC_URL: https://gitlab.com/.well-known/openid-configuration
      SPICEDB_GRPC_PRESHARED_KEY: ${SPICEDB_GRPC_PRESHARED_KEY}
      SPICEDB_URL: ${SPICEDB_URL:-http://spicedb:50051}
    image: registry.gitlab.com/getbunker-france-nuage/france-nuage/plateforme/synchronizer:release
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: always
    pull_policy: always

  watchtower:
    command: "--interval 300 --label-enable --cleanup"
    container_name: watchtower
    environment:
      - WATCHTOWER_WATCHDOG=true
    image: containrrr/watchtower:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  nfs-snippets:
    driver: local
    driver_opts:
      type: nfs
      o: addr=nfs-snippets.france-nuage.fr,rw,nfsvers=4
      device: ":/mnt/Apps/France-Nuage/nfs-snippets-proxmox"
  postgres_data:
