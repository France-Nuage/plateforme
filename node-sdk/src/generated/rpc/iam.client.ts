// @generated by protobuf-ts 2.11.1 with parameter optimize_code_size
// @generated from protobuf file "iam.proto" (package "francenuage.fr.v1.iam", syntax proto3)
// tslint:disable
import type { RpcTransport } from '@protobuf-ts/runtime-rpc';
import type { ServiceInfo } from '@protobuf-ts/runtime-rpc';
import { stackIntercept } from '@protobuf-ts/runtime-rpc';
import type { UnaryCall } from '@protobuf-ts/runtime-rpc';
import type { RpcOptions } from '@protobuf-ts/runtime-rpc';

import { Invitations } from './iam';
import type { AnswerInvitationResponse } from './iam';
import type { AnswerInvitationRequest } from './iam';
import type { CreateInvitationResponse } from './iam';
import type { CreateInvitationRequest } from './iam';
import type { ListInvitationsResponse } from './iam';
import type { ListInvitationsRequest } from './iam';

/**
 * @generated from protobuf service francenuage.fr.v1.iam.Invitations
 */
export interface IInvitationsClient {
  /**
   * @generated from protobuf rpc: List
   */
  list(
    input: ListInvitationsRequest,
    options?: RpcOptions,
  ): UnaryCall<ListInvitationsRequest, ListInvitationsResponse>;
  /**
   * @generated from protobuf rpc: Create
   */
  create(
    input: CreateInvitationRequest,
    options?: RpcOptions,
  ): UnaryCall<CreateInvitationRequest, CreateInvitationResponse>;
  /**
   * @generated from protobuf rpc: Answer
   */
  answer(
    input: AnswerInvitationRequest,
    options?: RpcOptions,
  ): UnaryCall<AnswerInvitationRequest, AnswerInvitationResponse>;
}
/**
 * @generated from protobuf service francenuage.fr.v1.iam.Invitations
 */
export class InvitationsClient implements IInvitationsClient, ServiceInfo {
  typeName = Invitations.typeName;
  methods = Invitations.methods;
  options = Invitations.options;
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * @generated from protobuf rpc: List
   */
  list(
    input: ListInvitationsRequest,
    options?: RpcOptions,
  ): UnaryCall<ListInvitationsRequest, ListInvitationsResponse> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<ListInvitationsRequest, ListInvitationsResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
  /**
   * @generated from protobuf rpc: Create
   */
  create(
    input: CreateInvitationRequest,
    options?: RpcOptions,
  ): UnaryCall<CreateInvitationRequest, CreateInvitationResponse> {
    const method = this.methods[1],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<CreateInvitationRequest, CreateInvitationResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
  /**
   * @generated from protobuf rpc: Answer
   */
  answer(
    input: AnswerInvitationRequest,
    options?: RpcOptions,
  ): UnaryCall<AnswerInvitationRequest, AnswerInvitationResponse> {
    const method = this.methods[2],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<AnswerInvitationRequest, AnswerInvitationResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input,
    );
  }
}
