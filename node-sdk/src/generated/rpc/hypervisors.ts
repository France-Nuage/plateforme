// @generated by protobuf-ts 2.11.1 with parameter optimize_code_size
// @generated from protobuf file "hypervisors.proto" (package "francenuage.fr.api.controlplane.v1.hypervisors", syntax proto3)
// tslint:disable
import { MessageType } from '@protobuf-ts/runtime';
import { ServiceType } from '@protobuf-ts/runtime-rpc';

/**
 * ListHypervisorsRequest is an empty message for listing hypervisors.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.ListHypervisorsRequest
 */
export interface ListHypervisorsRequest {}
/**
 * ListHypervisorsResponse contains a collection of hypervisor information.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.ListHypervisorsResponse
 */
export interface ListHypervisorsResponse {
  /**
   * List of hypervisor details
   *
   * @generated from protobuf field: repeated francenuage.fr.api.controlplane.v1.hypervisors.Hypervisor hypervisors = 1
   */
  hypervisors: Hypervisor[];
}
/**
 * RegisterHypervisorRequest contains the necessary information to register a hypervisor.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.RegisterHypervisorRequest
 */
export interface RegisterHypervisorRequest {
  /**
   * Authorization token for secure API access
   *
   * @generated from protobuf field: string authorization_token = 1
   */
  authorizationToken: string;
  /**
   * Name of the storage to use for instances
   *
   * @generated from protobuf field: string storage_name = 2
   */
  storageName: string;
  /**
   * URL endpoint of the hypervisor API
   *
   * @generated from protobuf field: string url = 3
   */
  url: string;
  /**
   * Id of the datacenter this hypervisor belongs to
   *
   * @generated from protobuf field: string datacenter_id = 4
   */
  datacenterId: string;
  /**
   * Id of the organization this hypervisor belongs to
   *
   * @generated from protobuf field: string organization_id = 5
   */
  organizationId: string;
}
/**
 * RegisterHypervisorResponse contains the result of a register hypervisor operation.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.RegisterHypervisorResponse
 */
export interface RegisterHypervisorResponse {
  /**
   * The registered hypervisor.
   *
   * @generated from protobuf field: francenuage.fr.api.controlplane.v1.hypervisors.Hypervisor hypervisor = 1
   */
  hypervisor?: Hypervisor;
}
/**
 * DetachHypervisorRequest contains the necessary information to detach a hypervisor.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.DetachHypervisorRequest
 */
export interface DetachHypervisorRequest {
  /**
   * Id of the hypervisor
   *
   * @generated from protobuf field: string id = 1
   */
  id: string;
}
/**
 * DetachHypervisorResponse contains the result of a DetachHypervisor operation.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.DetachHypervisorResponse
 */
export interface DetachHypervisorResponse {}
/**
 * Hypervisor represents a virtualization platform that can host instances.
 *
 * @generated from protobuf message francenuage.fr.api.controlplane.v1.hypervisors.Hypervisor
 */
export interface Hypervisor {
  /**
   * Id of the hypervisor
   *
   * @generated from protobuf field: string id = 1
   */
  id: string;
  /**
   * Name of the storage to use for instances
   *
   * @generated from protobuf field: string storage_name = 2
   */
  storageName: string;
  /**
   * URL endpoint of the hypervisor API
   *
   * @generated from protobuf field: string url = 3
   */
  url: string;
  /**
   * Id of the datacenter the hypervisor belongs to
   *
   * @generated from protobuf field: string datacenter_id = 4
   */
  datacenterId: string;
  /**
   * Id of the organization the hypervisor belongs to
   *
   * @generated from protobuf field: string organization_id = 5
   */
  organizationId: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ListHypervisorsRequest$Type extends MessageType<ListHypervisorsRequest> {
  constructor() {
    super(
      'francenuage.fr.api.controlplane.v1.hypervisors.ListHypervisorsRequest',
      [],
    );
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.ListHypervisorsRequest
 */
export const ListHypervisorsRequest = new ListHypervisorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListHypervisorsResponse$Type extends MessageType<ListHypervisorsResponse> {
  constructor() {
    super(
      'francenuage.fr.api.controlplane.v1.hypervisors.ListHypervisorsResponse',
      [
        {
          no: 1,
          name: 'hypervisors',
          kind: 'message',
          repeat: 2 /*RepeatType.UNPACKED*/,
          T: () => Hypervisor,
        },
      ],
    );
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.ListHypervisorsResponse
 */
export const ListHypervisorsResponse = new ListHypervisorsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterHypervisorRequest$Type extends MessageType<RegisterHypervisorRequest> {
  constructor() {
    super(
      'francenuage.fr.api.controlplane.v1.hypervisors.RegisterHypervisorRequest',
      [
        {
          no: 1,
          name: 'authorization_token',
          kind: 'scalar',
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 2,
          name: 'storage_name',
          kind: 'scalar',
          T: 9 /*ScalarType.STRING*/,
        },
        { no: 3, name: 'url', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
        {
          no: 4,
          name: 'datacenter_id',
          kind: 'scalar',
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 5,
          name: 'organization_id',
          kind: 'scalar',
          T: 9 /*ScalarType.STRING*/,
        },
      ],
    );
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.RegisterHypervisorRequest
 */
export const RegisterHypervisorRequest = new RegisterHypervisorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterHypervisorResponse$Type extends MessageType<RegisterHypervisorResponse> {
  constructor() {
    super(
      'francenuage.fr.api.controlplane.v1.hypervisors.RegisterHypervisorResponse',
      [{ no: 1, name: 'hypervisor', kind: 'message', T: () => Hypervisor }],
    );
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.RegisterHypervisorResponse
 */
export const RegisterHypervisorResponse = new RegisterHypervisorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DetachHypervisorRequest$Type extends MessageType<DetachHypervisorRequest> {
  constructor() {
    super(
      'francenuage.fr.api.controlplane.v1.hypervisors.DetachHypervisorRequest',
      [{ no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ }],
    );
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.DetachHypervisorRequest
 */
export const DetachHypervisorRequest = new DetachHypervisorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DetachHypervisorResponse$Type extends MessageType<DetachHypervisorResponse> {
  constructor() {
    super(
      'francenuage.fr.api.controlplane.v1.hypervisors.DetachHypervisorResponse',
      [],
    );
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.DetachHypervisorResponse
 */
export const DetachHypervisorResponse = new DetachHypervisorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Hypervisor$Type extends MessageType<Hypervisor> {
  constructor() {
    super('francenuage.fr.api.controlplane.v1.hypervisors.Hypervisor', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: 'storage_name',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 3, name: 'url', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 4,
        name: 'datacenter_id',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 5,
        name: 'organization_id',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.api.controlplane.v1.hypervisors.Hypervisor
 */
export const Hypervisor = new Hypervisor$Type();
/**
 * @generated ServiceType for protobuf service francenuage.fr.api.controlplane.v1.hypervisors.Hypervisors
 */
export const Hypervisors = new ServiceType(
  'francenuage.fr.api.controlplane.v1.hypervisors.Hypervisors',
  [
    {
      name: 'ListHypervisors',
      options: {},
      I: ListHypervisorsRequest,
      O: ListHypervisorsResponse,
    },
    {
      name: 'RegisterHypervisor',
      options: {},
      I: RegisterHypervisorRequest,
      O: RegisterHypervisorResponse,
    },
    {
      name: 'DetachHypervisor',
      options: {},
      I: DetachHypervisorRequest,
      O: DetachHypervisorResponse,
    },
  ],
);
