// @generated by protobuf-ts 2.11.1 with parameter optimize_code_size
// @generated from protobuf file "compute.proto" (package "francenuage.fr.v1.compute", syntax proto3)
// tslint:disable
import { MessageType } from '@protobuf-ts/runtime';
import { ServiceType } from '@protobuf-ts/runtime-rpc';

/**
 * ListHypervisorsRequest is an empty message for listing hypervisors.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.ListHypervisorsRequest
 */
export interface ListHypervisorsRequest {}
/**
 * ListHypervisorsResponse contains a collection of hypervisor information.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.ListHypervisorsResponse
 */
export interface ListHypervisorsResponse {
  /**
   * List of hypervisor details
   *
   * @generated from protobuf field: repeated francenuage.fr.v1.compute.Hypervisor hypervisors = 1
   */
  hypervisors: Hypervisor[];
}
/**
 * RegisterHypervisorRequest contains the necessary information to register a hypervisor.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.RegisterHypervisorRequest
 */
export interface RegisterHypervisorRequest {
  /**
   * Authorization token for secure API access
   *
   * @generated from protobuf field: string authorization_token = 1
   */
  authorizationToken: string;
  /**
   * Name of the storage to use for instances
   *
   * @generated from protobuf field: string storage_name = 2
   */
  storageName: string;
  /**
   * URL endpoint of the hypervisor API
   *
   * @generated from protobuf field: string url = 3
   */
  url: string;
  /**
   * Id of the zone this hypervisor belongs to
   *
   * @generated from protobuf field: string zone_id = 4
   */
  zoneId: string;
  /**
   * Id of the organization this hypervisor belongs to
   *
   * @generated from protobuf field: string organization_id = 5
   */
  organizationId: string;
}
/**
 * RegisterHypervisorResponse contains the result of a register hypervisor operation.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.RegisterHypervisorResponse
 */
export interface RegisterHypervisorResponse {
  /**
   * The registered hypervisor.
   *
   * @generated from protobuf field: francenuage.fr.v1.compute.Hypervisor hypervisor = 1
   */
  hypervisor?: Hypervisor;
}
/**
 * DetachHypervisorRequest contains the necessary information to detach a hypervisor.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.DetachHypervisorRequest
 */
export interface DetachHypervisorRequest {
  /**
   * Id of the hypervisor
   *
   * @generated from protobuf field: string id = 1
   */
  id: string;
}
/**
 * DetachHypervisorResponse contains the result of a DetachHypervisor operation.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.DetachHypervisorResponse
 */
export interface DetachHypervisorResponse {}
/**
 * Hypervisor represents a virtualization platform that can host instances.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.Hypervisor
 */
export interface Hypervisor {
  /**
   * Id of the hypervisor
   *
   * @generated from protobuf field: string id = 1
   */
  id: string;
  /**
   * Name of the storage to use for instances
   *
   * @generated from protobuf field: string storage_name = 2
   */
  storageName: string;
  /**
   * URL endpoint of the hypervisor API
   *
   * @generated from protobuf field: string url = 3
   */
  url: string;
  /**
   * Id of the zone the hypervisor belongs to
   *
   * @generated from protobuf field: string zone_id = 4
   */
  zoneId: string;
  /**
   * Id of the organization the hypervisor belongs to
   *
   * @generated from protobuf field: string organization_id = 5
   */
  organizationId: string;
}
/**
 * ListZonesRequest is an empty message for listing zones.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.ListZonesRequest
 */
export interface ListZonesRequest {}
/**
 * ListZonesResponse contains a collection of zone information.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.ListZonesResponse
 */
export interface ListZonesResponse {
  /**
   * List of zone details
   *
   * @generated from protobuf field: repeated francenuage.fr.v1.compute.Zone zones = 1
   */
  zones: Zone[];
}
/**
 * Zone represents a zone.
 *
 * @generated from protobuf message francenuage.fr.v1.compute.Zone
 */
export interface Zone {
  /**
   * Id of the zone
   *
   * @generated from protobuf field: string id = 1
   */
  id: string;
  /**
   * Name of the zone.
   *
   * @generated from protobuf field: string name = 2
   */
  name: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ListHypervisorsRequest$Type extends MessageType<ListHypervisorsRequest> {
  constructor() {
    super('francenuage.fr.v1.compute.ListHypervisorsRequest', []);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.ListHypervisorsRequest
 */
export const ListHypervisorsRequest = new ListHypervisorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListHypervisorsResponse$Type extends MessageType<ListHypervisorsResponse> {
  constructor() {
    super('francenuage.fr.v1.compute.ListHypervisorsResponse', [
      {
        no: 1,
        name: 'hypervisors',
        kind: 'message',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: () => Hypervisor,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.ListHypervisorsResponse
 */
export const ListHypervisorsResponse = new ListHypervisorsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterHypervisorRequest$Type extends MessageType<RegisterHypervisorRequest> {
  constructor() {
    super('francenuage.fr.v1.compute.RegisterHypervisorRequest', [
      {
        no: 1,
        name: 'authorization_token',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 2,
        name: 'storage_name',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 3, name: 'url', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 4, name: 'zone_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 5,
        name: 'organization_id',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.RegisterHypervisorRequest
 */
export const RegisterHypervisorRequest = new RegisterHypervisorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RegisterHypervisorResponse$Type extends MessageType<RegisterHypervisorResponse> {
  constructor() {
    super('francenuage.fr.v1.compute.RegisterHypervisorResponse', [
      { no: 1, name: 'hypervisor', kind: 'message', T: () => Hypervisor },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.RegisterHypervisorResponse
 */
export const RegisterHypervisorResponse = new RegisterHypervisorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DetachHypervisorRequest$Type extends MessageType<DetachHypervisorRequest> {
  constructor() {
    super('francenuage.fr.v1.compute.DetachHypervisorRequest', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.DetachHypervisorRequest
 */
export const DetachHypervisorRequest = new DetachHypervisorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DetachHypervisorResponse$Type extends MessageType<DetachHypervisorResponse> {
  constructor() {
    super('francenuage.fr.v1.compute.DetachHypervisorResponse', []);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.DetachHypervisorResponse
 */
export const DetachHypervisorResponse = new DetachHypervisorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Hypervisor$Type extends MessageType<Hypervisor> {
  constructor() {
    super('francenuage.fr.v1.compute.Hypervisor', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 2,
        name: 'storage_name',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 3, name: 'url', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 4, name: 'zone_id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      {
        no: 5,
        name: 'organization_id',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.Hypervisor
 */
export const Hypervisor = new Hypervisor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListZonesRequest$Type extends MessageType<ListZonesRequest> {
  constructor() {
    super('francenuage.fr.v1.compute.ListZonesRequest', []);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.ListZonesRequest
 */
export const ListZonesRequest = new ListZonesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListZonesResponse$Type extends MessageType<ListZonesResponse> {
  constructor() {
    super('francenuage.fr.v1.compute.ListZonesResponse', [
      {
        no: 1,
        name: 'zones',
        kind: 'message',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: () => Zone,
      },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.ListZonesResponse
 */
export const ListZonesResponse = new ListZonesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Zone$Type extends MessageType<Zone> {
  constructor() {
    super('francenuage.fr.v1.compute.Zone', [
      { no: 1, name: 'id', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: 'name', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
}
/**
 * @generated MessageType for protobuf message francenuage.fr.v1.compute.Zone
 */
export const Zone = new Zone$Type();
/**
 * @generated ServiceType for protobuf service francenuage.fr.v1.compute.Hypervisors
 */
export const Hypervisors = new ServiceType(
  'francenuage.fr.v1.compute.Hypervisors',
  [
    {
      name: 'List',
      options: {},
      I: ListHypervisorsRequest,
      O: ListHypervisorsResponse,
    },
    {
      name: 'Register',
      options: {},
      I: RegisterHypervisorRequest,
      O: RegisterHypervisorResponse,
    },
    {
      name: 'Detach',
      options: {},
      I: DetachHypervisorRequest,
      O: DetachHypervisorResponse,
    },
  ],
);
/**
 * @generated ServiceType for protobuf service francenuage.fr.v1.compute.Zones
 */
export const Zones = new ServiceType('francenuage.fr.v1.compute.Zones', [
  { name: 'List', options: {}, I: ListZonesRequest, O: ListZonesResponse },
]);
