syntax = "proto3";

package francenuage.fr.api.controlplane.v1.resources;

import "google/protobuf/timestamp.proto";
import "validate.proto";

service Identity {
  rpc InviteMember (InviteMemberRequest) returns (InviteMemberResponse);

  rpc ListOrganizationMembers(ListOrganizationMembersRequest) returns (ListOrganizationMembersResponse);
}

message Member {
    string email = 1;
}

message InviteMemberRequest {
    string organization_id = 1 [(validate.rules).string = {
        min_len: 1, 
        max_len: 36, 
        pattern: "^[a-zA-Z0-9_-]+$"  // Alphanumeric with underscores and hyphens
    }];

    Member member = 2;
}

message InviteMemberResponse {}

message ListOrganizationMembersRequest {
    string id = 1 [(validate.rules).string = {
        min_len: 1, 
        max_len: 36, 
        pattern: "^[a-zA-Z0-9_-]+$"  // Alphanumeric with underscores and hyphens
    }];
}

message ListOrganizationMembersResponse {
  repeated Member members = 1;
}

// Resources service provides operations to manage organizational resources such as
// Organizations and Projects.
service Resources {
    // ListOrganizations retrieves information about all available organizations.
    // Returns a collection of organizations.
    rpc ListOrganizations (ListOrganizationsRequest) returns (ListOrganizationsResponse);

    // CreateOrganization creates a new organization with the specified name.
    // Returns the newly created organization.
    rpc CreateOrganization (CreateOrganizationRequest) returns (CreateOrganizationResponse);

    // ListProjects retrieves information about all available projects for a specific organization.
    // Returns a collection of projects.
    rpc ListProjects (ListProjectsRequest) returns (ListProjectsResponse);

    // CreateProject creates a new project with the specified name within an organization.
    // Returns the newly created project.
    rpc CreateProject (CreateProjectRequest) returns (CreateProjectResponse);
}

// Organization represents a top-level resource that can contain multiple projects.
message Organization {
    // Unique identifier for the organization
    string id = 1 [(validate.rules).string = {
        min_len: 1, 
        max_len: 36, 
        pattern: "^[a-zA-Z0-9_-]+$"  // Alphanumeric with underscores and hyphens
    }];
    
    // Human-readable name of the organization
    string name = 2 [(validate.rules).string = {
        min_len: 1,
        max_len: 64,
        pattern: "^[a-zA-Z0-9_\\- ]+$"  // Alphanumeric with spaces, underscores and hyphens
    }];
    
    // Creation time of the organization
    google.protobuf.Timestamp created_at = 3;

    // Time of the organization's last update
    google.protobuf.Timestamp updated_at = 4;
}

// Project represents a container for resources within an organization.
message Project {
    // Unique identifier for the project
    string id = 1 [(validate.rules).string = {
        min_len: 1, 
        max_len: 36, 
        pattern: "^[a-zA-Z0-9_-]+$"  // Alphanumeric with underscores and hyphens
    }];
    
    // Human-readable name of the project
    string name = 2 [(validate.rules).string = {
        min_len: 1,
        max_len: 64,
        pattern: "^[a-zA-Z0-9_\\- ]+$"  // Alphanumeric with spaces, underscores and hyphens
    }];
    
    // ID of the organization this project belongs to
    string organization_id = 3 [(validate.rules).string = {
        min_len: 1, 
        max_len: 36, 
        pattern: "^[a-zA-Z0-9_-]+$"  // Alphanumeric with underscores and hyphens
    }];
    
    // Creation time of the project
    google.protobuf.Timestamp created_at = 4;

    // Time of the project's last update
    google.protobuf.Timestamp updated_at = 5;
}

// ListOrganizationsRequest is an empty message for listing organizations.
message ListOrganizationsRequest {}

// ListOrganizationsResponse contains a collection of organization information.
message ListOrganizationsResponse {
    // List of organization details
    repeated Organization organizations = 1;
}

// CreateOrganizationRequest contains the necessary information to create an organization.
message CreateOrganizationRequest {
    // Name of the organization to create
    string name = 1 [(validate.rules).string = {
        min_len: 1,
        max_len: 64,
        pattern: "^[a-zA-Z0-9_\\- ]+$"  // Alphanumeric with spaces, underscores and hyphens
    }];
}

// CreateOrganizationResponse contains the result of a create organization operation.
message CreateOrganizationResponse {
    // The created organization
    Organization organization = 1;
}

// ListProjectsRequest contains the necessary information to list projects.
message ListProjectsRequest {}

// ListProjectsResponse contains a collection of project information.
message ListProjectsResponse {
    // List of project details
    repeated Project projects = 1;
}

// CreateProjectRequest contains the necessary information to create a project.
message CreateProjectRequest {
    // Name of the project to create
    string name = 1 [(validate.rules).string = {
        min_len: 1,
        max_len: 64,
        pattern: "^[a-zA-Z0-9_\\- ]+$"  // Alphanumeric with spaces, underscores and hyphens
    }];
    
    // ID of the organization this project should belong to
    string organization_id = 2 [(validate.rules).string = {
        min_len: 1, 
        max_len: 36, 
        pattern: "^[a-zA-Z0-9_-]+$"  // Alphanumeric with underscores and hyphens
    }];
}

// CreateProjectResponse contains the result of a create project operation.
message CreateProjectResponse {
    // The created project
    Project project = 1;
}
