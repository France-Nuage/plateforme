syntax = "proto3";

package controlplane.v0;

import "google/protobuf/empty.proto";

// ControlPlane service provides operations to manage virtual machine instances.
service Hypervisor {
    // ListInstances retrieves information about all available instances.
    // Returns a collection of instance details including their current status and resource usage.
    rpc ListInstances (google.protobuf.Empty) returns (ListInstancesResponse);

    // StartInstance initiates a specific instance identified by its unique ID.
    // Returns an empty response on success.
    rpc StartInstance (StartInstanceRequest) returns (google.protobuf.Empty);

    // StopInstance halts a specific instance identified by its unique ID.
    // Returns an empty response on success.
    rpc StopInstance (StopInstanceRequest) returns (google.protobuf.Empty);
}

// InstanceInfo contains detailed information about a virtual machine instance.
message InstanceInfo {
  // Unique identifier for the instance
  string id = 1;
  
  // Current operational status of the instance
  InstanceStatus status = 2;
  
  // Maximum CPU cores available to the instance
  uint32 max_cpu_cores = 3;
  
  // Current CPU utilization as a percentage (0.0-100.0)
  float cpu_usage_percent = 4;
  
  // Maximum memory available to the instance (in bytes)
  uint64 max_memory_bytes = 5;
  
  // Current memory utilization (in bytes)
  uint64 memory_usage_bytes = 6;
}

// InstanceStatus represents the possible states of a virtual machine instance.
enum InstanceStatus {
    // Instance is active and operational
    RUNNING = 0;

    // Instance is inactive
    STOPPED = 1;
}

// ListInstancesResponse contains a collection of instance information.
message ListInstancesResponse {
  // List of instance details
  repeated InstanceInfo instances = 1;
}

// StartInstanceRequest identifies which instance to start.
message StartInstanceRequest {
    // Unique identifier of the instance to start
    string id = 1;
}

// StopInstanceRequest identifies which instance to stop.
message StopInstanceRequest {
    // Unique identifier of the instance to stop
    string id = 1;
}
