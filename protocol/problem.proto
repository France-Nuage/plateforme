syntax = "proto3";
package francenuage.fr.api.controlplane.v1;

// Status codes that can be used with ProblemDetails
enum StatusCode {
    // Unspecified status - should generally be avoided
    STATUS_UNSPECIFIED = 0;
    
    // The server has no knowledge of the requested resource
    NOT_FOUND = 1;
    
    // The server rejected the request as invalid
    INVALID_ARGUMENT = 2;
    
    // The operation cannot be performed in the current state
    FAILED_PRECONDITION = 3;
    
    // The requested operation was rejected due to rate limiting
    RESOURCE_EXHAUSTED = 4;
    
    // The server is currently unavailable
    UNAVAILABLE = 5;
    
    // The operation was rejected due to access restrictions
    PERMISSION_DENIED = 6;
    
    // There was an internal server error
    INTERNAL_ERROR = 7;
    
    // The requested operation is not implemented
    UNIMPLEMENTED = 8;
    
    // A timeout occurred while processing the request
    DEADLINE_EXCEEDED = 9;
    
    // The operation was cancelled
    CANCELLED = 10;
    
    // A required resource could not be allocated
    RESOURCE_UNAVAILABLE = 11;
}

// Problem details object as defined by RFC7807
// This provides a standardized format for error reporting in APIs
message ProblemDetails {
    // A URI reference [RFC3986] that identifies the problem type.
    // When dereferenced, it SHOULD provide human-readable documentation for the problem type.
    // When this member is not present, its value is assumed to be "about:blank".
    // Consumers MUST use the "type" string as the primary identifier for the problem type.
    // Note that this accepts relative URIs which must be resolved relative to the document's base URI.
    // Consumers SHOULD NOT automatically dereference the type URI.
    string type = 1;
    
    // A short, human-readable summary of the problem type.
    // It SHOULD NOT change from occurrence to occurrence of the problem,
    // except for purposes of localization.
    // This string is advisory and included only for users who are not aware
    // of the semantics of the URI and do not have the ability to discover them.
    string title = 2;
    
    // The status code for this occurrence of the problem.
    // This is advisory and conveys the status code used for the convenience of the consumer.
    // Consumers can use the status member to determine what the original status code
    // used by the generator was, in cases where it has been changed,
    // and when messages persist without transport information.
    StatusCode status = 3;
    
    // A human-readable explanation specific to this occurrence of the problem.
    // The detail member, if present, ought to focus on helping the client
    // correct the problem, rather than giving debugging information.
    // Consumers SHOULD NOT parse the "detail" member for information;
    // extensions are more suitable and less error-prone ways to obtain such information.
    string detail = 4;
    
    // A URI reference that identifies the specific occurrence of the problem.
    // It may or may not yield further information if dereferenced.
    // Note that this accepts relative URIs which must be resolved relative
    // to the document's base URI.
    string instance = 5;
    
    // Additional information about the problem.
    // This can be used to include extensions as defined in RFC7807 Section 3.2.
    // Extensions are used to convey additional information that may be of use to some consumers.
    // Extensions SHOULD be defined when there's a need to convey additional
    // information that doesn't naturally fit into the standard fields above.
    map<string, string> extensions = 6;
}
