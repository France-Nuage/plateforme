stages:
  - build
  - auto-set-labels-new-issue

variables:
  DOCKER_IMAGE: registry.gitlab.com/getnobullshit/france-nuage/website/apps/api:$CI_COMMIT_SHORT_SHA
  LATEST_IMAGE: registry.gitlab.com/getnobullshit/france-nuage/website/apps/api:latest

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  script:
    # Build the Docker image from the root, specify the Dockerfile in apps/api
    - docker build -f apps/api/Dockerfile -t $DOCKER_IMAGE .
    
    # Tag the image as 'latest'
    - docker tag $DOCKER_IMAGE $LATEST_IMAGE
    
    # Push the Docker image with both tags (commit short SHA and latest)
    - docker push $DOCKER_IMAGE
    - docker push $LATEST_IMAGE
    
  rules:
    - if: ($CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "test-ci") && $CI_PIPELINE_SOURCE == "push"
      changes:
        - apps/api/**  # Trigger only when files in the API directory are modified
    - when: never  # Do not run for other sources like API or webhooks

set-issue-labels:
  stage: auto-set-labels-new-issue
  script:
    - echo "Checking for existing labels on the issue..."
    - |
      # Get the current labels
      CURRENT_LABELS=$(curl --silent --header "PRIVATE-TOKEN: $SA_API_TOKEN" \
        "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/issues/$ISSUE_ID" | jq -r '.labels | join(",")')
      
      # If no labels, apply group and milestone labels
      if [ -z "$CURRENT_LABELS" ]; then
        echo "No labels found. Setting default labels..."
        curl --request PUT \
          --header "PRIVATE-TOKEN: $SA_API_TOKEN" \
          --header "Content-Type: application/json" \
          --data '{"labels": "group::marketing-communication, Milestone::France-Nuage issue mail Ã  classifier"}' \
          "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/issues/$ISSUE_ID"
        echo "Labels applied successfully."
      else
        echo "Labels already exist: $CURRENT_LABELS. Skipping."
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "api"  # Run only for API-triggered pipelines
